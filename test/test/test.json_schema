; Example JSON schema file -- test.json_schema
; Used to validate test.json

{
	"@type": "object",
	"@entry": {
		"firstName": {
			"@type": "string",
			"@pattern": "^[A-Z][a-z]*$",
			"@length": [ 1, 50 ]
		},
		"lastName": {
			"@type": "string",
			"@pattern": "^[A-Z][a-z]*$",
			"@length": [ 1, 50 ]
		},
		"age": {
			"@type": "integer",
			"@range": [ 1, 100 ]
		},
		"pi": {
			"@type": "float",
			"@range": [ 3.14159 ],
			"@optional": true
		},
		"address": {
			"@type": "object",
			"@entry": {
				"streetAddress": {
					"@type": "string",
					"@pattern": "^[0-9]+\ [a-zA-Z0-9]+(\ [A-Z][a-z]*)?$",
					"@length": [ 1, 100 ],
				},
				"city": {
					"@type": "string",
					"@pattern": "^[A-Z][a-z]*([\ ][A-Z][a-z]*)*$",
					"@length": [ 1, 50 ],
				},
				"state": {
					"@type": "string",
					"@pattern": "^[A-Z]{2}$",
					"@length": [ 2 ],
				},
				"postalCode": {
					"@type": "integer",
					"@range": [ 00000, 99999 ],
				}
			}
		},
		"phoneNumbers": {
			"@type": "array",
			"@count": 2,
			"@entry": {
				"@type": "object",
				"@entry": {
					"type": {
						"@type": "string",
						"@pattern": "^[a-zA-Z][a-z]*$",
						"@length": [ 1, 50 ],
					},
					"number": {
						"@type": "string",
						"@pattern": "^[0-9]{3}\ [0-9]{3}-[0-9]{4}$",
						"@length": [ 7, 50 ],
					},
					"callable": {
						"@type": "boolean",
						"@range": [ true, false ],
					}
				}
			}
			
		}
	}
}